#!/usr/bin/env python3

import numpy as np


def score_game(game_core):
    """Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число"""
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1, 101, size=1000)
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return score


def game_core_v3(number):
    """Для угадывания всегда берём число из середины диапазона т.к. это
    уменьшает число попыток. Если число больше загаданного, дальше
    анализируем вернхнюю половину диапазона, если меньше - то нижнюю.
    Снова берём число из середины диапазона, и смотрим, больше оно или меньше
    загаданного. Повторяем операцию пока не угадаем число. """
    count = 1  # Счётчик попыток
    max_num = 101  # Максимальное число диапазона
    min_num = 1  # Минимальное число диапазона

    predict = (max_num + min_num) // 2  # Число из середины диапазона

    # Цикл повторяется пока наше число не совпадает с загаданным
    while number != predict:
        count += 1  # Увеличиваем счётчик попыток на 1 попытку

        # Если загаданное число больше нашего, то берём верхнюю половину
        # диапазона
        if number > predict:
            min_num = predict
        # Если загаданное число меньше нашего, то берём нижнюю половину
        # диапазона
        elif number < predict:
            max_num = predict

        # Находим новое среднее число и повторяем цикл пока не угадаем
        predict = (max_num + min_num) // 2

    # Количество попыток. Выходим из цикла, когда наше число равно загаданному
    return count


score_game(game_core_v3)
